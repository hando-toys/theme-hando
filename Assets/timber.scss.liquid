/*============================================================================
  Shopify Timber
  Copyright 2016 Shopify Inc.
  Author Carson Shold @cshold
  Built with Sass - http://sass-lang.com/

  Some things to know about this file:
    - Sass is compiled on Shopify's server so you don't need to convert it to CSS yourself
    - The output CSS is compressed and comments are removed
    - You cannot use @imports in this file
        * Use grunt or gulp tasks to enable @imports - https://github.com/Shopify/shopify-css-import
    - Helpers variables, mixins, and starter classes are provided. Change as needed.
    - The file is prepped with a CSS reset
    - The font icons are prepared using https://icomoon.io/app
==============================================================================*/

/*============================================================================
  Table of Contents

  #Breakpoint and Grid Variables
  #General Variables
  #Sass Mixins
  #Normalize
  #Grid Setup
  #Basic Styles
  #Helper Classes
  #Typography
  #Rich Text Editor
  #Links and Buttons
  #Lists
  #Tables
  #Reponsive Tables
  #OOCSS Media Object
  #Images and Iframes
  #Forms
  #Icons
  #Pagination
  #Site Header
  #Site Nav and Dropdowns
  #Mobile Nav
  #Drawers
  #Site Footer
  #Product and Collection Grids
  #Collection Filters
  #Breadcrumbs
  #Product Page
  #Notes and Form Feedback
  #Cart Page
  #Ajax Cart Styles
==============================================================================*/

/*============================================================================
  #Base Dimension
==============================================================================*/
$base: 24px;

/*============================================================================
  #Breakpoint and Grid Variables
==============================================================================*/
$viewportIncrement: 1px;

$small: 480px;
$medium: 768px;
$large: 769px;

$postSmall: $small + $viewportIncrement;
$preMedium: $medium - $viewportIncrement;
$preLarge: $large - $viewportIncrement;

/*================ The following are dependencies of csswizardry grid ================*/
$breakpoints: (
  'small' '(max-width: #{$small})',
  'medium' '(min-width: #{$postSmall}) and (max-width: #{$medium})',
  'medium-down' '(max-width: #{$medium})',
  'large' '(min-width: #{$large})'
);
$breakpoint-has-widths: ('small', 'medium', 'medium-down', 'large');
$breakpoint-has-push:  ('medium', 'medium-down', 'large');
$breakpoint-has-pull:  ('medium', 'medium-down', 'large');

/*============================================================================
  #General Variables
==============================================================================*/

// Hando Colours

$black: #222222;
$white: #FFFFFF;

$pink: #f9a1c7;
$orange: #ff4300;
$red: #f30008;

$aqua: #bbe5f3;
$blue: #2557ef;
$navy: #0030b1;

$irish: #00b769;
$green: #008d46;
$forest: #1d7e4b;

$yellow: #ffc702;
$gold: #fdb60f;
$copper: #eb9f00;



// Timber Colors
$colorPrimary: rgba(17,17,17,1);
$colorSecondary: #444;
$colorFade: rgba(17,17,17,0.5);


//$colorPrimary: {{ settings.color_primary }};
//$colorSecondary: {{ settings.color_secondary }};

// Button colors
$colorBtnPrimary: $colorPrimary;
$colorBtnPrimaryHover: darken($colorBtnPrimary, 10%);
$colorBtnPrimaryActive: darken($colorBtnPrimaryHover, 10%);
$colorBtnPrimaryText: #fff;

$colorBtnSecondary: $colorSecondary;
$colorBtnSecondaryHover: darken($colorBtnSecondary, 10%);
$colorBtnSecondaryActive: darken($colorBtnSecondaryHover, 10%);
$colorBtnSecondaryText: #fff;

// Text link colors
$colorLink: $colorPrimary;
$colorLinkHover: lighten($colorPrimary, 15%);

// Text colors
$colorTextBody: {{ settings.color_body_text }};

// Backgrounds
$colorBody: {{ settings.color_body_bg }};

// Border colors
$colorBorder: {{ settings.color_borders }};

// Nav and dropdown link background
$colorNav: #f2f2f2;
$colorNavText: #333;

// Site Footer
$colorFooterBg: {{ settings.color_footer_bg }};
$colorFooterText: {{ settings.color_footer_text }};

// Logo max width
$logoMaxWidth: {{ settings.logo_max_width | default: '450' | remove: 'px' }}px;

// Helper colors
$disabledGrey: #f6f6f6;
$disabledBorder: darken($disabledGrey, 25%);
$errorRed: #f15641;
$errorRedBg: $errorRed;
$successGreen: #009947;
$successGreenBg: #ecfef0;

// Drawers
$drawerNavWidth: $base*6;
$drawerCartWidth: $base*12;
$colorDrawers: #f6f6f6;
$colorDrawerBorder: darken($colorDrawers, 5%);
$colorDrawerText: #333;
$drawerTransition: all 0.4s cubic-bezier(0.46, 0.01, 0.32, 1);

// Sizing variables
$siteWidth: 1200px;
$gutter: $base;
$gridGutter: $base/2; // can be a %, but nested grids will have smaller margins because of it
$radius: 3px;

$height--header: $base*2;

// Z-index
$zindexNavDropdowns: 5;
$zindexDrawer: 10;

/*================ Typography ================*/

@font-face {
  font-family: 'Atlas Grotesk';
  src: url('{{ "atlasgroteskBold.eot" | asset_url }}');
  src: url('{{ "atlasgroteskBold.eot" | asset_url }}?#iefix') format("embedded-opentype"), url('{{ "atlasgroteskBold.woff" | asset_url }}') format("woff");
  font-weight: 700;
  font-style: normal;
  font-stretch: normal; }
@font-face {
  font-family: 'Atlas Grotesk';
  src: url("{{ 'atlasgroteskRegular.eot' | asset_url }}");
  src: url("{{ 'atlasgroteskRegular.eot' | asset_url }}?#iefix") format("embedded-opentype"), url("{{ 'atlasgroteskRegular.woff' | asset_url }}") format("woff");
  font-weight: 400;
  font-style: normal;
  font-stretch: normal; }
@font-face {
  font-family: 'Atlas Grotesk';
  src: url("{{ 'atlasgroteskLight.eot' | asset_url }}");
  src: url("{{ 'atlasgroteskLight.eot' | asset_url }}?#iefix") format("embedded-opentype"), url("{{ 'atlasgroteskLight.woff' | asset_url }}") format("woff");
  font-weight: 300;
  font-style: normal;
  font-stretch: normal; }

$headerFontStack: 'Atlas Grotesk', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$headerFontWeight: 400;

$bodyFontStack: 'Atlas Grotesk', 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$baseFontSize: 14px; // Henceforth known as 1em


/*============================================================================
  #Sass Mixins
==============================================================================*/
.clearfix {
  &:after {
    content: '';
    display: table;
    clear: both; }
  *zoom: 1;
}

@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both; }
  *zoom: 1;
}

/*============================================================================
  Prefixer mixin for generating vendor prefixes:
    - Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss
    - Usage:

      // Input:
      .element {
        @include prefixer(transform, scale(1), ms webkit spec);
      }

      // Output:
      .element {
        -ms-transform: scale(1);
        -webkit-transform: scale(1);
        transform: scale(1);
      }
==============================================================================*/

@mixin prefixer($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin transform($transform) {
  @include prefixer(transform, $transform, ms webkit spec);
}

@mixin user-select($value: none) {
  @include prefixer(user-select, $value, webkit moz ms spec);
}

@mixin backface($visibility: hidden) {
  @include prefixer(backface-visibility, $visibility, webkit spec);
}

@mixin transform-origin($origin) {
  @include prefixer(user-select, $origin, webkit moz ms spec);
}

@mixin box-shadow($left, $top, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $left $top $blur $color;
        -moz-box-shadow: inset $left $top $blur $color;
        box-shadow: inset $left $top $blur $color;
    } @else {
        -webkit-box-shadow: $left $top $blur $color;
        -moz-box-shadow: $left $top $blur $color;
        box-shadow: $left $top $blur $color;
    }
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@function em($target, $context: $baseFontSize) {
  @if $target == 0 {
    @return 0;
  }
  @return $target / $context + 0em;
}

@function color-control($color) {
  @if (lightness( $color ) > 40) {
    @return #000;
  }
  @else {
    @return #fff;
  }
}

/*============================================================================
  Layer promotion mixin for creating smoother animations with higher FPS.
==============================================================================*/
@mixin promote-layer($properties: transform) {
  -webkit-transform: translateZ(0); // translateZ hack
  will-change: $properties; // spec
}

/*============================================================================
  Dependency-free breakpoint mixin
    - Based on http://blog.grayghostvisuals.com/sass/sass-media-query-mixin/
    - Usage docs: http://shopify.github.io/Timber/#sass-mixins
==============================================================================*/
$min: min-width;
$max: max-width;
@mixin at-query ($constraint_, $viewport1_, $viewport2_:null) {
 $constraint: $constraint_; $viewport1: $viewport1_; $viewport2: $viewport2_;
  @if type-of($constraint_) == number {
    $viewport1 : $constraint_; $viewport2 : $viewport1_; $constraint : null;
  }
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}

/*============================================================================
  Flexbox mixin

  // Input:
      .element {
        @include flexbox();
        @include align-content(flex-start|flex-end|center|space-between|space-around|stretch);
        @include align-items(flex-start|flex-end|center|baseline|stretch);
        @include flex-flow(column|row wrap|nowrap);
        @include justify-content(flex-start|flex-end|center|space-between|space-around);
      }
==============================================================================*/

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
          -ms-flex: $values;
              flex: $values;
}
@mixin align-content($value: stretch) {
    // No Webkit Box Fallback.
    -webkit-align-content: $value;
       -moz-align-content: $value;
            align-content: $value;
    @if $value == flex-start {
        -ms-flex-line-pack: start;
    } @else if $value == flex-end {
        -ms-flex-line-pack: end;
    } @else {
        -ms-flex-line-pack: $value;
    }
}
@mixin align-items($value: stretch) {
    -webkit-align-items: $value;
       -moz-align-items: $value;
            align-items: $value;
    @if $value == flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    } @else if $value == flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    } @else {
        -webkit-box-align: $value;
        -ms-flex-align: $value;
    }
}
@mixin align-self($value: auto) {
    // No Webkit Box Fallback.
    -webkit-align-self: $value;
       -moz-align-self: $value;
            align-self: $value;
    @if $value == flex-start {
        -ms-flex-item-align: start;
    } @else if $value == flex-end {
        -ms-flex-item-align: end;
    } @else {
        -ms-flex-item-align: $value;
    }
}
// Shorthand for flex-direction and flex-wrap
@mixin flex-flow($values: (row nowrap)) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
     -moz-flex-flow: $values;
      -ms-flex-flow: $values;
          flex-flow: $values;
}
@mixin justify-content($value: flex-start) {
    -webkit-justify-content: $value;
       -moz-justify-content: $value;
            justify-content: $value;
    @if $value == flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    } @else if $value == flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    } @else if $value == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    } @else if $value == space-around {
        -ms-flex-pack: distribute;    
    } @else {
        -webkit-box-pack: $value;
        -ms-flex-pack: $value;
    }
}
// Shorter version:
@mixin flex-just($args...) {
    @include justify-content($args...);
}
@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
              -webkit-order: $int;
                 -moz-order: $int;
             -ms-flex-order: $int;
                      order: $int;
}


/*============================================================================
  #Normalize
==============================================================================*/
*, input, :before, :after {
  box-sizing: border-box;
}

html, body {
  padding: 0;
  margin: 0;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block;
}

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*============================================================================
  #Grid Setup
    - Based on csswizardry grid, but with floated columns, a fixed gutter size, and BEM classes
    - Breakpoints defined above, under #Breakpoint and Grid Variables
    - Note the inclusion of .grid-uniform to take care of clearfixes on evenly sized grid items
==============================================================================*/
$responsive:         true;
$mobile-first:       true;
$use-silent-classes: false;
$push:               true;
$pull:               false;

/* Force clearfix on grids */
.grid,
.grid-uniform {
  @include clearfix;
}

/* Manual grid__item clearfix */
.grid__item.clear {
  clear: both;
}

$class-type: unquote(".");

@if $use-silent-classes == true {
  $class-type: unquote("%");
}

@mixin grid-media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}


/*============================================================================
  Drop relative positioning into silent classes which can't take advantage of
  the `[class*="push--"]` and `[class*="pull--"]` selectors.
==============================================================================*/
@mixin silent-relative() {
  @if $use-silent-classes == true {
    position:relative;
  }
}

/*============================================================================
  Grid Setup
    1. Allow the grid system to be used on lists.
    2. Remove any margins and paddings that might affect the grid system.
    3. Apply a negative `margin-left` to negate the columns' gutters.
==============================================================================*/
#{$class-type}grid,
#{$class-type}grid-uniform {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -$gridGutter;
}

#{$class-type}grid__item {
  box-sizing: border-box;
  float: left;
  min-height: 1px;
  padding-left: $gridGutter;
  vertical-align: top;
  @if $mobile-first == true {
    width: 100%;
  }
}

/*============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
==============================================================================*/
#{$class-type}grid--rev {
  @extend #{$class-type}grid;
  direction: rtl;
  text-align: left;

  > #{$class-type}grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

/* Gutterless grids have all the properties of regular grids, minus any spacing. */
#{$class-type}grid--full {
  @extend #{$class-type}grid;
  margin-left: 0;

  > #{$class-type}grid__item {
    padding-left: 0;
  }
}

/*============================================================================
  WIDTHS
    - Create width classes, prefixed by the specified namespace.
==============================================================================*/
@mixin device-type($namespace:"") {
  /** Whole */
  #{$class-type}#{$namespace}one-whole       { width: 100%; }

  /* Halves */
  #{$class-type}#{$namespace}one-half        { width: 50%; }

  /* Thirds */
  #{$class-type}#{$namespace}one-third       { width: 33.333%; }
  #{$class-type}#{$namespace}two-thirds      { width: 66.666%; }

  /* Quarters */
  #{$class-type}#{$namespace}one-quarter     { width: 25%; }
  #{$class-type}#{$namespace}two-quarters    { width: 50%; }
  #{$class-type}#{$namespace}three-quarters  { width: 75%; }

  /* Fifths */
  #{$class-type}#{$namespace}one-fifth       { width: 20%; }
  #{$class-type}#{$namespace}two-fifths      { width: 40%; }
  #{$class-type}#{$namespace}three-fifths    { width: 60%; }
  #{$class-type}#{$namespace}four-fifths     { width: 80%; }

  /* Sixths */
  #{$class-type}#{$namespace}one-sixth       { width: 16.666%; }
  #{$class-type}#{$namespace}two-sixths      { width: 33.333%; }
  #{$class-type}#{$namespace}three-sixths    { width: 50%; }
  #{$class-type}#{$namespace}four-sixths     { width: 66.666%; }
  #{$class-type}#{$namespace}five-sixths     { width: 83.333%; }

  /* Eighths */
  #{$class-type}#{$namespace}one-eighth      { width: 12.5%; }
  #{$class-type}#{$namespace}two-eighths     { width: 25%; }
  #{$class-type}#{$namespace}three-eighths   { width: 37.5%; }
  #{$class-type}#{$namespace}four-eighths    { width: 50%; }
  #{$class-type}#{$namespace}five-eighths    { width: 62.5%; }
  #{$class-type}#{$namespace}six-eighths     { width: 75%; }
  #{$class-type}#{$namespace}seven-eighths   { width: 87.5%; }

  /* Tenths */
  #{$class-type}#{$namespace}one-tenth       { width: 10%; }
  #{$class-type}#{$namespace}two-tenths      { width: 20%; }
  #{$class-type}#{$namespace}three-tenths    { width: 30%; }
  #{$class-type}#{$namespace}four-tenths     { width: 40%; }
  #{$class-type}#{$namespace}five-tenths     { width: 50%; }
  #{$class-type}#{$namespace}six-tenths      { width: 60%; }
  #{$class-type}#{$namespace}seven-tenths    { width: 70%; }
  #{$class-type}#{$namespace}eight-tenths    { width: 80%; }
  #{$class-type}#{$namespace}nine-tenths     { width: 90%; }

  /* Twelfths */
  #{$class-type}#{$namespace}one-twelfth     { width: 8.333%; }
  #{$class-type}#{$namespace}two-twelfths    { width: 16.666%; }
  #{$class-type}#{$namespace}three-twelfths  { width: 25%; }
  #{$class-type}#{$namespace}four-twelfths   { width: 33.333%; }
  #{$class-type}#{$namespace}five-twelfths   { width: 41.666% }
  #{$class-type}#{$namespace}six-twelfths    { width: 50%; }
  #{$class-type}#{$namespace}seven-twelfths  { width: 58.333%; }
  #{$class-type}#{$namespace}eight-twelfths  { width: 66.666%; }
  #{$class-type}#{$namespace}nine-twelfths   { width: 75%; }
  #{$class-type}#{$namespace}ten-twelfths    { width: 83.333%; }
  #{$class-type}#{$namespace}eleven-twelfths { width: 91.666%; }
}

/*================ Clearfix helper on uniform grids ================*/
@mixin clearfix-helper($namespace:"") {
  .grid-uniform {
    #{$class-type}#{$namespace}one-half:nth-child(2n+1),
    #{$class-type}#{$namespace}one-third:nth-child(3n+1),
    #{$class-type}#{$namespace}one-quarter:nth-child(4n+1),
    #{$class-type}#{$namespace}one-fifth:nth-child(5n+1),
    #{$class-type}#{$namespace}one-sixth:nth-child(6n+1),
    #{$class-type}#{$namespace}two-sixths:nth-child(3n+1),
    #{$class-type}#{$namespace}three-sixths:nth-child(2n+1),
    #{$class-type}#{$namespace}two-eighths:nth-child(4n+1),
    #{$class-type}#{$namespace}four-eighths:nth-child(2n+1),
    #{$class-type}#{$namespace}five-tenths:nth-child(2n+1),
    #{$class-type}#{$namespace}one-twelfth:nth-child(12n+1),
    #{$class-type}#{$namespace}two-twelfths:nth-child(6n+1),
    #{$class-type}#{$namespace}three-twelfths:nth-child(4n+1),
    #{$class-type}#{$namespace}four-twelfths:nth-child(3n+1),
    #{$class-type}#{$namespace}six-twelfths:nth-child(2n+1)    { clear: both; }
  }
}

/*================ Helper show/hide classes around our breakpoints ================*/
@mixin device-helper($namespace:"") {
  #{$class-type}#{$namespace}show        { display: block!important; }
  #{$class-type}#{$namespace}hide        { display: none!important; }

  #{$class-type}#{$namespace}text-left   { text-align: left!important; }
  #{$class-type}#{$namespace}text-right  { text-align: right!important; }
  #{$class-type}#{$namespace}text-center { text-align: center!important; }

  #{$class-type}#{$namespace}left        { float: left!important; }
  #{$class-type}#{$namespace}right       { float: right!important; }
}

/*================ Our regular, non-responsive width and helper classes ================*/
@include device-type();
@include device-helper();

/*================ Our responsive classes, if we have enabled them ================*/
@if $responsive == true {
  @each $name in $breakpoint-has-widths {
    @include grid-media-query($name) {
      @include device-type('#{$name}--');
      @include device-helper('#{$name}--');
      @include clearfix-helper('#{$name}--');
    }
  }
}

/*============================================================================
  PUSH
    - Push classes, to move grid items over to the right by certain amounts
==============================================================================*/
@mixin push-setup($namespace: "") {
  /* Whole */
  #{$class-type}push--#{$namespace}one-whole       { left: 100%; @include silent-relative(); }

  /* Halves */
  #{$class-type}push--#{$namespace}one-half        { left: 50%; @include silent-relative(); }

  /* Thirds */
  #{$class-type}push--#{$namespace}one-third       { left: 33.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-thirds      { left: 66.666%; @include silent-relative(); }

  /* Quarters */
  #{$class-type}push--#{$namespace}one-quarter     { left: 25%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-quarters    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-quarters  { left: 75%; @include silent-relative(); }

  /* Fifths */
  #{$class-type}push--#{$namespace}one-fifth       { left: 20%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-fifths      { left: 40%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-fifths    { left: 60%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-fifths     { left: 80%; @include silent-relative(); }

  /* Sixths */
  #{$class-type}push--#{$namespace}one-sixth       { left: 16.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-sixths      { left: 33.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-sixths    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-sixths     { left: 66.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-sixths     { left: 83.333%; @include silent-relative(); }

  /* Eighths */
  #{$class-type}push--#{$namespace}one-eighth      { left: 12.5%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-eighths     { left: 25%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-eighths   { left: 37.5%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-eighths    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-eighths    { left: 62.5%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}six-eighths     { left: 75%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}seven-eighths   { left: 87.5%; @include silent-relative(); }

  /* Tenths */
  #{$class-type}push--#{$namespace}one-tenth       { left: 10%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-tenths      { left: 20%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-tenths    { left: 30%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-tenths     { left: 40%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-tenths     { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}six-tenths      { left: 60%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}seven-tenths    { left: 70%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}eight-tenths    { left: 80%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}nine-tenths     { left: 90%; @include silent-relative(); }

  /* Twelfths */
  #{$class-type}push--#{$namespace}one-twelfth     { left: 8.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-twelfths    { left: 16.666%; @include silent-relative();  }
  #{$class-type}push--#{$namespace}three-twelfths  { left: 25%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-twelfths   { left: 33.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-twelfths   { left: 41.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}six-twelfths    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}seven-twelfths  { left: 58.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}eight-twelfths  { left: 66.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}nine-twelfths   { left: 75%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}ten-twelfths    { left: 83.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}eleven-twelfths { left: 91.666%; @include silent-relative(); }
}

@if $push == true {
  [class*="push--"]{ position:relative; }

  @include push-setup();

  @if $responsive == true {
    @each $name in $breakpoint-has-push {
      @include grid-media-query($name) {
        @include push-setup('#{$name}--');
      }
    }
  }
}

/*============================================================================
  PULL
    - Pull classes, to move grid items back to the left by certain amounts
==============================================================================*/
@mixin pull-setup($namespace: "") {
  /* Whole */
  #{$class-type}pull--#{$namespace}one-whole       { right: 100%; @include silent-relative(); }

  /* Halves */
  #{$class-type}pull--#{$namespace}one-half        { right: 50%; @include silent-relative(); }

  /* Thirds */
  #{$class-type}pull--#{$namespace}one-third       { right: 33.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-thirds      { right: 66.666%; @include silent-relative(); }

  /* Quarters */
  #{$class-type}pull--#{$namespace}one-quarter     { right: 25%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-quarters    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-quarters  { right: 75%; @include silent-relative(); }

  /* Fifths */
  #{$class-type}pull--#{$namespace}one-fifth       { right: 20%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-fifths      { right: 40%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-fifths    { right: 60%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-fifths     { right: 80%; @include silent-relative(); }

  /* Sixths */
  #{$class-type}pull--#{$namespace}one-sixth       { right: 16.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-sixths      { right: 33.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-sixths    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-sixths     { right: 66.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-sixths     { right: 83.333%; @include silent-relative(); }

  /* Eighths */
  #{$class-type}pull--#{$namespace}one-eighth      { right: 12.5%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-eighths     { right: 25%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-eighths   { right: 37.5%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-eighths    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-eighths    { right: 62.5%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}six-eighths     { right: 75%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}seven-eighths   { right: 87.5%; @include silent-relative(); }

  /* Tenths */
  #{$class-type}pull--#{$namespace}one-tenth       { right: 10%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-tenths      { right: 20%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-tenths    { right: 30%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-tenths     { right: 40%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-tenths     { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}six-tenths      { right: 60%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}seven-tenths    { right: 70%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}eight-tenths    { right: 80%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}nine-tenths     { right: 90%; @include silent-relative(); }

  /* Twelfths */
  #{$class-type}pull--#{$namespace}one-twelfth     { right: 8.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-twelfths    { right: 16.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-twelfths  { right: 25%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-twelfths   { right: 33.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-twelfths   { right: 41.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}six-twelfths    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}seven-twelfths  { right: 58.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}eight-twelfths  { right: 66.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}nine-twelfths   { right: 75%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}ten-twelfths    { right: 83.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}eleven-twelfths { right: 91.666%; @include silent-relative(); }
}

@if $pull == true {
  [class*="pull--"]{ position:relative; }

  @include pull-setup();

  @if $responsive == true {
    @each $name in $breakpoint-has-pull {
      @include grid-media-query($name) {
        @include pull-setup('#{$name}--');
      }
    }
  }
}

/*============================================================================
  #Basic Styles
==============================================================================*/
html {
  background-color: $colorFooterBg;
}

body {
  background-color: $colorBody;
}

[tabindex='-1']:focus {
  outline: none;
}

%wrapper {
  max-width: $siteWidth;
  margin: 0 auto;
  padding: 0 ($gutter / 2);
}

.wrapper {
  @extend %wrapper;
  @include clearfix();

  @include at-query ($min, $small) {
    padding: 0 $gutter;
  }
}

.main-content {
}

/*============================================================================
  #Helper Classes
==============================================================================*/
.is-transitioning {
  display: block !important;
  visibility: visible !important;
}

.display-table {
  display: table;
  table-layout: fixed;
  width: 100%;
}

.display-table-cell {
  display: table-cell;
  vertical-align: middle;
  float: none;
}

@include at-query ($min, $large) {
  .large--display-table {
    display: table;
    table-layout: fixed;
    width: 100%;
  }

  .large--display-table-cell {
    display: table-cell;
    vertical-align: middle;
    float: none;
  }
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}

/*============================================================================
  #Typography
==============================================================================*/
body,
input,
textarea,
button,
select {
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  color: $colorTextBody;
  font-family: $bodyFontStack;
  font-size: 14px;
  font-weight: 300;
  line-height: 18px;
}

h1, h2, h3, h4, h5, h6 {
  display: block;
  font-family: $headerFontStack;
  font-weight: $headerFontWeight;

  a {
    text-decoration: none;
    font-weight: inherit;
  }
}

/*================ Use em() Sass function to declare font-size ================*/
h1 {
  font-size: $base;
  font-weight: 300;
  line-height: $base*2;
}

h2 {
  font-size: 18px;
  font-weight: 400;
  line-height: 30px;
}

h3 {
  font-size: em(12px);
  font-weight: 500;
  letter-spacing: 1px;
  line-height: 18px;
  text-transform: uppercase;
}

h4 {
  font-size: 10px;
  font-weight: 500;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

h5 {
  font-size: 10px;
  font-weight: 400;
  line-height: 14px;
}

h6 {
  font-size: em(14px);
}

small {
  font-size: 10px;
  font-weight: 400;

  strong {
    font-weight: 500;
  }
}

.h1 { @extend h1; }
.h2 { @extend h2; }
.h3 { @extend h3; }
.h4 { @extend h4; }
.h5 { @extend h5; }
.h6 { @extend h6; }

.small {
  @extend small;
}

p {
  margin: 0;

  img {
    margin: 0;
  }
}

em {
  font-style: italic;
}

b, strong {
  font-weight: 700;
}

sup, sub {
  position: relative;
  font-size: 60%;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}

sub {
  bottom: -0.5em;
}

/*================ Blockquotes ================*/
blockquote {
  font-size: 1.125em;
  line-height: 1.45;
  font-style: italic;
  margin: 0 0 $gutter;
  padding: ($gutter / 2) $gutter;
  border-left: 1px solid $colorBorder;

  p {
    margin-bottom: 0;

    & + cite {
      margin-top: $gutter / 2;
    }
  }

  cite {
    display: block;
    font-size: 0.75em;

    &:before {
      content: '\2014 \0020';
    }
  }
}

/*================ Code ================*/
code, pre {
  background-color: #faf7f5;
  font-family: Consolas,monospace;
  font-size: 1em;
  border: 0 none;
  padding: 0 2px;
  color: #51ab62;
}

pre {
  overflow: auto;
  padding: $gutter / 2;
  margin: 0 0 $gutter;
}

/*================ Horizontal Rules ================*/
hr {
  clear: both;
  border-top: solid $colorBorder;
  border-width: 1px 0 0;
  margin: $gutter 0;
  height: 0;

  &.hr--small {
    margin: ($gutter / 2) 0;
  }

  &.hr--clear {
    border-top-color: transparent;
  }
}

/*================ Section Headers ================*/
.section-header {
  margin-bottom: $gutter / 1.5;
}

@include at-query ($min, $large) {
  .section-header {
    display: table;
    width: 100%;
  }

  .section-header__title {
    margin-bottom: $gutter / 2.5;
  }

  .section-header__left {
    display: table-cell;
    vertical-align: middle;
    margin-bottom: 0;

    h1, h2, h3, h4,
    .h1, .h2, .h3, .h4 {
      margin-bottom: 0;
    }
  }

  .section-header__right {
    display: table-cell;
    vertical-align: middle;
    text-align: right;
    width: 335px;

    @include at-query ($max, $medium) {
      margin-bottom: $gutter;
    }
  }
}

.section-header__right {
  .form-horizontal,
  .collection-view {
    display: inline-block;
    vertical-align: middle;
  }

  @include at-query ($min, $postSmall) {
    label + select,
    .collection-view {
      margin-left: $gutter / 2;
    }
  }
}

.collection-view {
  display: inline-block;
  border: 1px solid $colorBorder;
  border-radius: $radius;
  padding: 0 5px;
  height: 37px; // same as form elements
  overflow: hidden;

  /*================ Only show on larger screens ================*/
  @include at-query ($min, $large) {
    display: inline-block;
  }
}

.change-view {
  display: block;
  background: none;
  border: 0 none;
  float: left;
  padding: 10px 8px;
  color: $colorBorder;
  line-height: 1;

  &:hover,
  &:focus {
    color: $colorPrimary;
  }
}

.change-view--active {
  cursor: default;
  color: $colorPrimary;
}

/*============================================================================
  #Layout Components
==============================================================================*/
.field {
  @include clearfix();
  display: block;
  width: 100%;

  .field__key,
  .field__value {
    float: left;
    line-height: $base;
  }
  .field__key {
    width: 34%;
  }
  .field__value {
    width: 66%;
  }
}

/*============================================================================
  #Rich Text Editor
==============================================================================*/
.rte {
  margin-bottom: $gutter / 2;

  a {
    text-decoration: underline;
  }

  // Add some top margin to headers from the rich text editor
  h1, h2, h3, h4, h5, h6 {
    margin-top: 2em;

    &:first-child {
      margin-top: 0;
    }

    a {
      text-decoration: none;
    }
  }

  > div {
    margin-bottom: $gutter / 2;
  }

  li {
    margin-bottom: 0.4em;
  }
}

.rte--header {
  margin-bottom: 0;
}

/*============================================================================
  #Links and Buttons
==============================================================================*/
a,
.text-link {
  color: $colorLink;
  text-decoration: none;
  background: transparent;
}

a:hover,
a:focus {
  color: $colorLinkHover;
}

button {
  overflow: visible;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

.btn,
.rte .btn {
  @extend .h4;
  @include user-select(none);
  -webkit-appearance: none;
  -moz-appearance: none;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  color: $colorPrimary;
  cursor: pointer;
  display: inline-block;
  font-weight: 700;
  line-height: $base*1.5;
  margin: 0;
  padding: 0 $base/2;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
  width: auto;

  /*================ Set primary button colors - can override later ================*/

  &:hover {
    background-color: $colorBtnPrimaryHover;
    color: $colorBtnPrimaryText;
  }

  &:active,
  &:focus {
   background-color: $colorBtnPrimaryActive;
   color: $colorBtnPrimaryText;
   outline: none;
  }

  &[disabled],
  &.disabled {
    cursor: default;
    color: $disabledBorder;
    background-color: $disabledGrey;
  }
}

.btn--secondary,
.rte .btn--secondary {
  @extend .btn;
  background-color: $colorBtnSecondary;

  &:hover {
    background-color: $colorBtnSecondaryHover;
    color: $colorBtnSecondaryText;
  }

  &:active,
  &:focus {
   background-color: $colorBtnSecondaryActive;
   color: $colorBtnSecondaryText;
  }
}

.btn--small {
  padding: 4px 5px;
  font-size: em(12px);
}

.btn--large {
  @extend .h4;
  background-color: $successGreen;
  color: white;
  line-height: $base*1.5;
  padding: 0 $base/2;
  text-align: left;
}

.btn--bar {
  height: $base*3;
  line-height: $base*3;
  width: 50%;
}

.btn--full {
  width: 100%;
}

.btn--submit {
  border-radius: 2px;
  position: relative;

  &::after {
    @include transform(rotate(45deg));
    border-right: solid 1px white;
    border-top: solid 1px white;
    content:'';
    height: 10px;
    position: absolute;
    right: 16px;
    top: 13px;
    width: 10px;
  }
}

/*================ Force an input/button to look like a text link ================*/
.text-link {
  display: inline;
  border: 0 none;
  background: none;
  padding: 0;
  margin: 0;
}

/*============================================================================
  #Lists
==============================================================================*/
ul, ol {
  margin: 0 0 ($gutter / 2) 20px;
  padding: 0;
}

ol { list-style: decimal; }
ul ul, ul ol,
ol ol, ol ul { margin: 4px 0 5px 20px; }
li { margin-bottom: 0.25em; }

ul.square { list-style: square outside; }
ul.disc { list-style: disc outside; }
ol.alpha { list-style: lower-alpha outside; }

.no-bullets {
  list-style: none outside;
  margin-left: 0;
}

.list {
  list-style: none outside;
  margin: 0;

  li {
    margin: 0;

    > a {
      display: block;
      line-height: $base;
    }
  }

  &.list--inline {
    li {
      display: inline-block;
    }
  }
}

/*============================================================================
  #Tables
==============================================================================*/
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

table.full {
  width: 100%;
  margin-bottom: 1em;
}

.table-wrap {
  max-width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

th {
  font-weight: bold;
}

th, td {
  text-align: left;
  padding: $gutter / 2;
  border: 1px solid $colorBorder;
}

/*============================================================================
  Responsive tables, defined with .table--responsive on table element.
  Only defined for IE9+
==============================================================================*/
.table--responsive {
  @include at-query($max, $small) {
    thead {
      display: none;
    }

    tr {
      display: block;
    }

    // IE9 table layout fixes
    tr,
    td {
      float: left;
      clear: both;
      width: 100%;
    }

    th,
    td {
      display: block;
      text-align: right;
      padding: 15px;
    }

    td:before {
      content: attr(data-label);
      float: left;
      text-align: center;
      font-size: 12px;
      padding-right: 10px;
    }

    &.cart-table {
      img {
        margin: 0 auto;
      }

      .js-qty {
        float: right;
      }
    }
  }
}

@include at-query($max, $small) {
  .table--small-hide {
    display: none !important;
  }

  .table__section + .table__section {
    position: relative;
    margin-top: 10px;
    padding-top: 15px;

    &:after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: 15px;
      right: 15px;
      border-bottom: 1px solid $colorBorder;
    }
  }
}


/*============================================================================
  #OOCSS Media Object
    - http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/
==============================================================================*/
.media,
.media-flex {
  overflow: hidden;
  _overflow: visible;
  zoom: 1;
}

.media-img {
  float: left;
  margin-right: $gutter;
}

.media-img-right {
  float: right;
  margin-left: $gutter;
}

.media-img img,
.media-img-right img {
  display: block;
}


/*============================================================================
  #Images and Iframes
==============================================================================*/
img {
  border: 0 none;
}

svg:not(:root) {
  overflow: hidden;
}

img,
iframe {
  max-width: 100%;
}

.video-wrapper {
  position: relative;
  overflow: hidden;
  max-width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}


/*============================================================================
  #Forms
==============================================================================*/
form {
  margin-bottom: 0;
}

.form-vertical {
  margin-bottom: $gutter / 2;
}

/*================ Prevent zoom on touch devices in active inputs ================*/
@include at-query($max, $medium) {
  input,
  textarea {
    font-size: 16px;
  }
}

input,
textarea,
button,
select {
  padding: 0;
  margin: 0;
  @include user-select(text);
}

button {
  background: none;
  border: none;
  cursor: pointer;
}

button,
input,
textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
}

button {
  background: none;
  border: none;
  display: inline-block;
  cursor: pointer;
}

input[type="image"] {
  padding-left: 0;
  padding-right: 0;
}

fieldset {
  border: 1px solid $colorBorder;
  padding: $gutter / 2;
}

legend {
  border: 0;
  padding: 0;
}

button,
input[type="submit"] {
  cursor: pointer;
}

input,
textarea,
select {
  border: 1px solid $colorBorder;
  max-width: 100%;
  padding: 0 $base/2;

  &:focus {
    outline: 0;
  }

  &[disabled],
  &.disabled {
    cursor: default;
    background-color: $disabledGrey;
    border-color: $disabledBorder;
  }

  &.input-full {
    width: 100%;
  }
}

input {
  background-color: transparent;
  border: 0;
  height: $base*1.5;
  line-height: $base*1.5;
  margin: 0;
  padding: 0;

  @include placeholder{
    color: $colorFade;
  }
}

textarea {
  min-height: 100px;
  padding: $base/3 $base/2;
}

/*================ Input element overrides ================*/
input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin: 0 8px 0 0;
  padding: 0;
  width: auto;
}

input[type="checkbox"] {
  -webkit-appearance: checkbox;
  -moz-appearance: checkbox;
}

input[type="radio"] {
  -webkit-appearance: radio;
  -moz-appearance: radio;
}

input[type="image"] {
  padding-left: 0;
  padding-right: 0;
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-position: right center;
  background: {
    image: url('{{ "ico-select.svg" | asset_url }}');
    repeat: no-repeat;
    position: right 10px center;
    color: transparent;
  }
  padding-right: 28px;
  text-indent: 0.01px;
  text-overflow: '';
  cursor: pointer;

  /*================ Hide the svg arrow in IE9 and below ================*/
  .ie9 &,
  .lt-ie9 & {
    padding-right: 10px;
    background-image: none;
  }
}

optgroup {
  font-weight: bold;
}

// Force option color (affects IE only)
option {
  color: #000;
  background-color: #fff;
}

select::-ms-expand {
  display: none;
}

/*================ Form labels ================*/
.hidden-label {
  position: absolute;
  height: 0;
  width: 0;
  margin-bottom: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);

  // No placeholders, so force show labels
  .ie9 &,
  .lt-ie9 & {
    position: static;
    height: auto;
    width: auto;
    margin-bottom: 2px;
    overflow: visible;
    clip: initial;
  }
}

label[for] {
  cursor: pointer;
}

/*================ Horizontal Form ================*/
.form-vertical {
  input,
  select,
  textarea {
    display: block;
    margin-bottom: 10px;
  }

  input[type="radio"],
  input[type="checkbox"] {
    display: inline-block;
  }
}

/*================ Error styles ================*/
input,
select,
textarea {
  &.error {
    border-color: $errorRed;
    background-color: $errorRedBg;
    color: $errorRed;
  }
}

label.error {
  color: $errorRed;
}


/*================ Input Group ================*/
.input-group {
  position: relative;
  display: table;
  border-collapse: separate;

  input {
    // Nasty Firefox hack for inputs http://davidwalsh.name/firefox-buttons
    &::-moz-focus-inner {
      border: 0;
      padding: 0;
      margin-top: -1px;
      margin-bottom: -1px;
    }
  }
}

.input-group-field,
.input-group-btn {
  display: table-cell;
  vertical-align: middle;
  margin: 0;
}

.input-group .btn,
.input-group .input-group-field {
  height: $base*1.5;
}

.input-group .input-group-field {
  width: 100%;
}

.input-group-btn {
  position: relative;
  white-space: nowrap;
  width: 1%;
}

/*============================================================================
  #Icons
==============================================================================*/
.icn {
  display: block;
  height: $base;
  position: relative;
  width: $base;

  .icn__x {
    background-color: $colorPrimary;
    height: 1px;
    width: $base;
  }

  &.icn--menu {
    .icn__x {
      left: 0;
      position: absolute;
      top: 11px;

      &.icn__x--2 {
        top: 5px;
      }
      &.icn__x--3 {
        top: 17px;
      }
    }
  }
}


/*============================================================================
  #Pagination
==============================================================================*/
.pagination {
  margin-bottom: 1em;
  text-align: center;

  > span {
    display: inline-block;
    line-height: 1;
  }

  a {
    display: block;
  }

  a,
  .page.current {
    padding: 8px;
  }
}

/*================ Home to hamburger and cart that toggle drawers ================*/
.site-nav--mobile {
  @extend .site-nav;

  .text-right & {
    margin: 0 (-$gutter / 2) 0 0;
  }
}

.site-nav__link {
  display: block;
  text-decoration: none;
  padding: $gutter / 2;
  white-space: nowrap;
  color: $colorNavText;

  &:hover,
  &:active,
  &:focus {
    color: darken($colorNavText, 15%);
  }

  .icon-arrow-down {
    position: relative;
    top: -2px;
    font-size: 10px;
    padding-left: $gutter / 4;
  }

  .site-nav--active > & {
    font-weight: bold;
  }

  .site-nav--mobile & {
    display: inline-block;
  }
}

/*================ Dropdowns ================*/
.site-nav__dropdown {
  display: none;
  position: absolute;
  left: 0;
  margin: 0;
  z-index: $zindexNavDropdowns;

  .supports-no-touch .site-nav--has-dropdown:hover &,
  .site-nav--has-dropdown.nav-hover &,
  .nav-focus + & {
    display: block;
  }

  a {
    background-color: $colorNav;

    &:hover,
    &:active,
    &:focus {
      background-color: darken($colorNav, 10%);
    }
  }
}

/*============================================================================
  #Drawers
==============================================================================*/
.js-drawer-open {
  overflow: hidden;
}

.drawer {
  @include promote-layer();
  display: none;
  position: fixed;
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
  top: 0;
  bottom: 0; 
  max-width: 95%;
  z-index: $zindexDrawer;
  color: $colorDrawerText;
  background-color: $colorDrawers;
  transition: $drawerTransition;

  a {
    color: $colorDrawerText;

    &:hover,
    &:focus {
      opacity: 0.7;
    }
  }

  input,
  textarea {
    border-color: $colorDrawerBorder;
  }
}

.drawer--left {
  background-color: $colorPrimary;
  color: white;
  left: -$drawerNavWidth;
  width: $drawerNavWidth;

  &::after {
    @include box-shadow(-3px, 0, $base/2, rgba(17,17,17,0.1), $inset: false);
    bottom: -$base;
    content:'';
    position: absolute;
    right: -$base;
    top: -$base;
    width: $base;
  }

  .drawer__label {
    color: white;
    line-height: $base*2;
    padding-top: $base;
  }
  .drawer__menu--collections {
    padding: 0 $base;
  }

  .list {
    a {
      color: white;
    }
  }

  .js-drawer-open-left & {
    display: block;
    @include transform(translateX($drawerNavWidth));

    .lt-ie9 & {
      left: 0;
    }
  }
}

.drawer--right {
  background-color: $colorPrimary;
  width: $drawerCartWidth;
  right: -$drawerCartWidth;

  .drawer__label {
    background-color: white;
    color: $colorPrimary;
    display: none;
    line-height: $base*2;
    padding-top: $base;

    @include at-query ($max, $small) {
      display: block;
    }
  }
  .js-drawer-open-right & {
    display: block;
    @include transform(translateX(-$drawerCartWidth));

    .lt-ie9 & {
      right: 0;
    }
  }
}

.drawer__label {
  display: block;
  padding: 0 $base;
  line-height: $base;
}

.drawer__menu {
  padding: $base/2 $base;

  &.drawer__menu--bottom {
    bottom: $base/2;
    position: absolute;

    li {
      line-height: $base;

      > a {
        display: block;
      }
    }
  }
}

#PageContainer {
  overflow: hidden;
}

.is-moved-by-drawer {
  @include promote-layer();
  transition: $drawerTransition;

  .js-drawer-open-left & {
    @include transform(translateX($drawerNavWidth));
  }

  .js-drawer-open-right & {
    @include transform(translateX(-$drawerCartWidth));
  }
}

.drawer__header {
  display: table;
  height: 70px;
  width: 100%;
  margin-bottom: $gutter / 2;
  border-bottom: 1px solid $colorDrawerBorder;
}

.drawer__title,
.drawer__close {
  display: table-cell;
  vertical-align: middle;
}

.drawer__title {
  width: 100%;
}

.drawer__close {
  width: 1%;
  text-align: center;
  font-size: em(18px);
}

.drawer__close button {
  position: relative;
  right: -20px;
  height: 100%;
  padding: 0 20px;
  color: inherit;

  &:active,
  &:focus {
    background-color: darken($colorDrawers, 5%);
  }
}

/*============================================================================
  #Site Header
==============================================================================*/

.header {
  padding: $base 0;

  @include at-query($max, $small) { 
  }

  &::after {
    background-color: lime;
    content: '';
    display: none;
    height: 1px;
    position: absolute;
    top: 46.5px;
    width: 100%;
  }

  &.header--fixed {
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 1000;
  }

  .wrapper {
    height: $height--header;
    position: relative;
  }

  .hando__logo {
    color: $colorPrimary;
    font-size: 18px;
    font-weight: 700;
    letter-spacing: 4px;
    text-transform: uppercase;
  }
  .page__title {
    color: $colorPrimary;
    font-size: 18px;
    font-weight: 300;
    letter-spacing: 0;
  }

  .header__menu {
    height: $height--header;
    left: 0;
    padding-left: $base*1.5;
    position: absolute;
    width: 25%;
    z-index: 10000;

    .toggle--drawer--left {
      display: none;
      height: $height--header;
      left: $base/2;
      padding: $base/2;
      position: absolute;
      width: $height--header;

      @include at-query ($max, $small) {
        display: block;
      }
    }

    .toggle--header__drawer {
      cursor: pointer;
      display: block;
      line-height: $height--header;

      @include at-query ($max, $small) {
        display: none;
      }

      &::after {
        @include transform(translateX(14px)translateY(21px)rotate(-135deg));
        border-bottom: solid 1px $colorPrimary;
        border-right: solid 1px $colorPrimary;
        content:'';
        height: 9px;
        left: 0;
        position: absolute;
        top: 0;
        width: 9px;
      }

      &.active {
        &::after {
          @include transform(translateX(14px)translateY(16px)rotate(45deg));
        }
      }
    }
  }
  .header__logo {
    height: $height--header;
    left: 25%;
    line-height: $height--header;
    position: absolute;
    text-align: center;
    width: 50%;

    .page__title {
      display: inline;
    }
  }
  .header__cart {
    height: $height--header;
    line-height: $height--header;
    padding: 0 $base/2;
    position: absolute;
    right: 0;
    text-align: right;
    width: 25%;

    .cart__label {
      color: $colorPrimary;
      display: inline;

      @include at-query($max, $small) { 
        display: none;
      }
    }

    .cart__count {
      display: inline-block;
      position: relative;
      text-align: center;
      width: $base*2;

      &::after {
        @include transform(rotate(45deg));
        border: solid 1px $colorPrimary;
        content:'';
        height: 30px;
        left: 9px;
        position: absolute;
        top: 8px;
        width: 30px;
      }
    }
  }

  .header__drawer {
    @include transform(scale(0.9));
    transition: $drawerTransition;
    display: block;
    left: 0;
    opacity: 0;
    padding: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    z-index: 9000;

    &.visible {
      @include transform(scale(1));
      opacity: 1;
      pointer-events: initial;
    }

    .list {
      @include box-shadow(0, $base/2, $base/2, rgba(0,0,0,0.05), $inset:false);
      background-color: rgba(255,255,255,0.9);
      border-radius: $base/4;
      margin: 0;
      padding: $base*2 $base*2 $base/3 $base*1.5;
    }
  }
}

/*============================================================================
  #Site Footer
==============================================================================*/
.footer {
  //background-color: pink;

  .wrapper {
    //background-color: violet;
    padding: 0;
    position: relative;
  }

  @include at-query ($min, $large) {
    padding: $base 0;
  }

  &.footer--fixed {
    bottom: 0;
    height: $base*3;
    position: absolute;
    width: 100%;
    z-index: 1000;

    .wrapper {
      height: $base*3;
    }

    .footer__menu {
      bottom: $base*2;
      position: absolute;

      @include at-query ($max, $medium) {
        bottom: $base;
      }
    }
    .footer__actions {
      bottom: $base*2.25;
      padding-top: $base;
      top: initial;

      @include at-query ($max, $medium) {
        bottom: $base*1.25;
      }
      @include at-query ($max, $small) {
        bottom: $base;
      }

      .footer__social {
        top: 52px + $base;

        @include at-query ($max, $small) {
          top: 80px;
        }
      }
    }
  }

  .footer__menu {
    //background-color: rgba(0,255,0,0.5);
    float: left;
    width: 25%;

    @include at-query ($max, $small) {
      display: none;
    }

    li {
      @extend h4;
      line-height: $base;
    }

    &.footer__menu--left {
      padding-left: $base*1.5;
      left: 0;
    }
    &.footer__menu--right {
      float: right;
      padding-right: $base*1.5;
      right: 0;

      li {
        text-align: right;
      }
    }


    .footer__support {
      padding-right: $base;
      position: relative;

      &::after {
        background-image: url('{{ 'icn__messenger.svg' | asset_url }}');
        background-position: 100% center;
        background-repeat: no-repeat;
        background-size: 18px;
        content:'';
        height: $base;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 0;
        width: $base;
      }

      > span {
        pointer-events: none;
      }

      .fb-messengermessageus {
        opacity: 0;
        position: absolute;
        right: 0;
        top: 0;
      }
    }
  }

  .footer__actions {
    //background-color: rgba(255,255,0,0.3);
    height: $base*4;
    left: 30%;
    padding: 0;
    position: absolute;
    top: -$base/4;
    width: 40%;

    @include at-query ($max, $small) {
      left: 0;
      padding: 0 $base;
      width: 100%;
    }

    &::after {
      @include transform(translateX(-50%));
      border: solid 1px magenta;
      content:'';
      display: none;
      height: 25px;
      left: 50%;
      position: absolute;
      top: 28px;
      top: 17px;
      width: 2000px;
    }
    &::before {
      @include transform(translateX(-50%));
      border: solid 1px cyan;
      bottom: 6px;
      content:'';
      display: none;
      height: 25px;
      left: 50%;
      position: absolute;
      width: 2000px;
    }

    .footer__label {
      display: block;
      padding: 0 $base/4;
      padding-top: 14px;

      @include at-query ($max, $medium) {
        display: none;
      }
    }

    .footer__newsletter {
      border-bottom: solid 1px $colorFade;
      padding-bottom: 3px;

      .input-group-field {
        padding: 0 $base/4;

        &:focus {
        }
      }
      .btn {
        @include transform(translateY(1px));
        height: $base;
        line-height: $base;
        margin: $base/4 0;
        padding: 0 $base/4;
      }
      .errors {
        position: absolute;
        top: -$base;
      }
    }
  }

  .footer__social {
    @include flexbox();
    @include align-content(center);
    @include align-items(center);
    @include flex-flow(row nowrap);
    @include justify-content(flex-end);
    //background-color: rgba(0,0,255,0.25);
    left: 0;
    padding: 0 3px;
    position: absolute;
    right: 0;
    top: 52px;

    @include at-query ($max, $medium) {
      @include justify-content(center);
    }

    .social__icn {
      background-position: center;
      background-repeat: no-repeat;
      background-size: 18px;
      display: block;
      height: $base;
      margin: 0 3px;
      text-indent: -9999em;
      width: $base;

      @include at-query ($max, $medium) {
        margin: 0 $base/3;
      }
      @include at-query ($max, $small) {
        margin: 0 $base/3;
      }

      &.social__icn--facebook {background-image: url('{{ 'icn__facebook.svg' | asset_url }}');}
      &.social__icn--instagram {background-image: url('{{ 'icn__instagram.svg' | asset_url }}');}
      &.social__icn--pinterest {background-image: url('{{ 'icn__pinterest.svg' | asset_url }}');}
      &.social__icn--twitter {background-image: url('{{ 'icn__twitter.svg' | asset_url }}');}
    }
  }
}

/*============================================================================
  #Index Hero
==============================================================================*/
.hero {
  background-color: lightblue;
  background-image: url('{{ 'hero--hando-golf.jpg' | asset_url }}');
  background-position: center;
  background-size: cover;
  height: 100%;
  opacity: 1;
  position: relative;

  @include at-query ($max, $medium) {
    background-image: url('{{ 'hero--hando.jpg' | asset_url }}');
  }

  @include at-query ($min, $large) {
  }

  &::after {
    border: solid 1px red;
    bottom: $base;
    content: '';
    display: none;
    left: $base;
    pointer-events: none;
    position: absolute;
    right: $base;
    top: $base;
  }
  &::before {
    border: solid 1px blue;
    bottom: $base;
    content: '';
    display: none;
    left: $base*1.5;
    position: absolute;
    right: $base*1.5;
    top: $base;
  }

  .hero__link {
    background-color: transparent;
    bottom: $base*5;
    cursor: pointer;
    left: 0;
    position: absolute;
    right: 0;
    top: $base*5;

    .hero__cta {
      @extend %wrapper;
      @include flexbox();
      @include align-content(center);
      @include align-items(flex-start);
      @include flex-flow(column nowrap);
      @include justify-content(center);
      height: 100%;
      opacity: 0;
      padding: 0;
      padding-bottom: $base*2;
      position: relative;

      @include at-query ($max, $medium) {
        display: none;
      }

      &::after {
        border-left: solid 1px red;
        content: '';
        display: none;
        left: $base*1.5;
        height: 1000px;
        pointer-events: none;
        position: absolute;
        right: $base;
        top: -500px;
      }

      .h1 {
        font-size: $base*2.25;
        font-weight: 300;
        line-height: $base*2.5;
        position: relative;

        > span {
          position: relative;
        }
      }
      .cta__third {

        &::before,
        &::after {
          content:'';
          position: absolute;
        }
        &::before {
          background-color: $black;
          height: 1px;
          left: 120px;
          top: 30px;
          width: $base*3;
        }
        &::after {
          @include transform(rotate(45deg));
          border-right: solid 1px $black;
          border-top: solid 1px $black;
          left: 177px;
          height: 13px;
          top: 24px;
          width: 13px;
        }
      }
    }
  }
}

.hero--center {
  .hero {
    .hero__link {
      .hero__cta {
        opacity: 1;
        padding: 0 25%;
        text-align: center;
      }
    }
  }
}
.hero--left {
  .hero {
    .hero__link {
      .hero__cta {
        opacity: 1;
        padding-left: 32px;
        padding-right: 50%;
      }
    }
  }
}
.hero--right {
  .hero {
    .hero__link {
      .hero__cta {
        opacity: 1;
        padding-left: 50%;
        padding-right: $base;
      }
    }
  }
}

/*============================================================================
  #Product and Collection Grids
==============================================================================*/
.grid__image {
  display: block;
  margin: 0 auto ($gutter / 2);

  img {
    display: block;
    margin: 0 auto;
  }
}

.collection__grid {
  @include clearfix();
  display: block;
  margin: 0 $base/4;
  position: relative;

  .collection__item {
    display: block;
    float: left;
    margin-bottom: $base/2;
    padding: 0 $base/4;
    position: relative;
    width: 25%;

    @include at-query ($max, $medium) {
      width: 50%;
    }

    .item__image {
      display: block;
    }
    .item__link {
      @include flexbox();
      @include align-content(center);
      @include align-items(center);
      @include flex-flow(column nowrap);
      @include justify-content(center);
      background-color: rgba(255,255,255,0.75);
      bottom: 0;
      left: 0;
      opacity: 0;
      position: absolute;
      right: 0;
      top: 0;
      text-align: center;
      transition: $drawerTransition;

      @include at-query ($min, $large) {
        &:hover {
          opacity: 1;
        }
      }
      @include at-query ($max, $small) {
        opacity: 0;
      }

      h4, h2 {
        margin: 0;
      }
      h2 {
        line-height: $base;
      }
    }
  }
}

/*============================================================================
  #Collection Filters
==============================================================================*/
.filter--active {
  font-weight: bold;
}

/*============================================================================
  #Breadcrumbs
==============================================================================*/
.breadcrumb {
  margin-bottom: $gutter;

  a,
  span {
    display: inline-block;
    padding: 0 7px 0 0;
    margin-right: 7px;

    &:first-child {
      padding-left: 0;
    }
  }
}


/*============================================================================
  #Product Page
==============================================================================*/

.product {

  .product__top {
    position: relative;
  }
  .product__bar {
    background-color: $black;
    bottom: 0;
    position: absolute;
    width: 100%;

    .wrapper {
      background-color: red;
      height: $base*3;
      position: relative;
    }
    .bar__nav {

    }
    .bar__actions {
      background-color: blue;
      height: $base*3;
      position: absolute;
      right: 0;
      top: 0;
      width: 34%;
    }
  }
  .product__data {
    height: 100%;
    position: absolute;
    width: 100%;

    @include at-query ($max, $small) {
      display: none;
    }

    .wrapper {
      height: 100%;
      padding: 0 $base;
      position: relative;
    }
  }

  .product__extended {
    display: none;
    padding: $base;
    margin-bottom: $base;

    @include at-query ($max, $small) {
      display: block;
    }
  }

  .product__body {
    bottom: 0;
    padding: $base*3 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 34%;

    @include at-query ($min, $medium) {
      @include flexbox();
      @include align-content(flex-start);
      @include align-items(flex-start);
      @include flex-flow(column nowrap);
      @include justify-content(center);
      padding-right: $base*1.5;
    }

    @include at-query ($max, $medium) {
      width: 50%;
    }

    @include at-query ($max, $small) {
      display: block;
      overflow: visible;
      position: relative;
      width: 100%;
    }
  }

  .product__price {
    border-bottom: solid 1px $colorFade;
    line-height: $base*1.5;
    margin-bottom: $base/4;
    width: 100%;

    .product__currency {
      display: inline;
      font-weight: 400;
    }
  }

  .product__title {
    //margin-bottom: $base/4;
    line-height: $base*1.5;
    position: relative;
    width: 100%;

    .product__sku {
      float: left;
      width: 34%;
    }
  }

  .product__description {
    padding-top: $base;

    p {
      @include clearfix();
      line-height: $base;
      margin-bottom: $base;
      position: relative;
    }
  }

  .product__form {
    padding-top: $base;
    position: relative;
    width: 100%;

    .product__variant {
      display: none;
    }

    .js-qty {
      height: $base*2;
      left: 34%;
      position: absolute;
      top: $base - 3;
      width: $base*2;
    }

    .btn {
      border: solid 1px $colorPrimary;
      position: absolute;
      right: 0;
      top: $base - 10;
    }
  }

  .errors {
    background-color: $errorRedBg;
    border-radius: 50%;
    display: none;
    float: right;
    height: $base/2;
    padding: 0 $base/4;
    text-indent: -9999em;
    width: $base/2;
  }

  .gallery__nav {
    bottom: $base*4;
    left: 0;
    position: absolute;
    text-indent:-9999em;
    top: 0;
    width: 66%;

    @include at-query ($max, $medium) {
      width: 50%;
    }
  }

  .product__gallery {
    background-position: center;
    background-size: cover;
    bottom: 0;
    margin: 0;
    position: absolute;
    right: -10%;
    top: 0;
    width: 150%;

    @include at-query ($max, $medium) {
      right: 0;
    }
    @include at-query ($max, $small) {
      right: -25%;
    }
  }

  .product__related {
    margin-bottom: $base;
    padding-top: $base/2;
  }
}


/*============================================================================
  #Notes and Form Feedback
==============================================================================*/
.note,
.errors {
  padding: 0 $base/4;
  text-align: left;

  ul,
  ol {
    margin-top: 0;
    margin-bottom: 0;
  }

  li:last-child {
    margin-bottom: 0;
  }

  p {
    margin-bottom: 0;
  }
}

.note {
  @extend .h5;
  border-color: $colorBorder;
}

.errors {
  font-weight: 500;

  ul {
    list-style: none;
    margin: 0;
  }
}

.form-success {
  color: $colorPrimary;

  a {
    color: $colorPrimary;
    text-decoration: underline;

    &:hover {
      text-decoration: none;
    }
  }
}

.form-error,
.errors {
  color: $colorPrimary;

  a {
    color: $colorPrimary;
    text-decoration: underline;

    &:hover {
      text-decoration: none;
    }
  }
}


/*============================================================================
  #Cart Page
==============================================================================*/
.cart__row {
  position: relative;
  margin-top: $gutter;
  padding-top: $gutter;
  border-top: 1px solid $colorBorder;

  &:first-child {
    margin-top: 0;
  }

  &:first-child {
    padding-top: 0;
  }

  .js-qty {
    margin: 0 auto;
  }
}

.cart-table {
  th {
    font-weight: normal;
  }

  td,
  th {
    padding: 30px 15px;
    border: none;
  }
}

@include at-query ($min, $large) {
  .cart__row--table-large {
    display: table;
    table-layout: fixed;
    width: 100%;

    .grid__item {
      display: table-cell;
      vertical-align: middle;
      float: none;
    }
  }
}

.cart__image {
  display: block;

  img {
    display: block;
    max-width: 100%;
  }
}

.cart__subtotal {
  margin: 0 0 0 ($gutter / 3);
  display: inline;
}

.cart__mini-labels {
  display: block;
  margin: ($gutter / 3) 0;
  font-size: em(12px);

  @include at-query ($min, $large) {
    display: none;
  }
}

.cart__remove {
  display: block;
}

.cart--empty {
  border-top: solid 1px white;
  color: white;
  line-height: 30px;
  margin: $base;
  padding-top: $base/4;
}

/*============================================================================
  #Ajax Cart Styles (conditionally loaded)
==============================================================================*/
{% if settings.ajax_cart_method == "drawer" %}

.ajaxcart__inner {
  background-color: white;
  padding: 0 $base/2;
  padding-top: $base;

  @include at-query ($max, $small) {
    padding-top: 0;
  }
}

.ajaxcart__product {
  border-top: solid 1px #DDD;
  max-height: $base*15;
  padding-bottom: 20px;
  padding-top: $base/2;
  position: relative;

  &:first-child {
    border-top: 0;
  }

  @include at-query ($max, $small) {
    padding-top: $base/4;

    &:first-child {
      border-top: solid 1px #DDD;
    }
  }

  &.is-removed {
    max-height: 0;
    overflow: hidden;
    visibility: hidden;
    transition: all 450ms cubic-bezier(0.57,.06,.05,.95);
    @include backface();
  }

  .ajaxcart__row {
    position: relative;

    .ajaxcart__product-name {
      margin-bottom: $base/2;
      padding: $base/8 $base/2;
      padding-right: $base*2;

      > a {display: block;}
    }
    .ajaxcart__qty {
      height: $base*2;
      position: absolute;
      right: $base/4;
      top: 0;
      width: $base*2;
    }
    .ajaxcart__price {
      padding: 0 $base/2;
      text-align: right;
    }
  }
}

.ajaxcart__product-image {
  display: block;
  overflow: hidden;
  margin-bottom: 15px;

  img {
    display: block;
    margin: 0 auto;
    max-width: 100%;
  }
}

.ajaxcart__product-name,
.ajaxcart__product-meta {
  display: block;
}

.ajaxcart__product-name + .ajaxcart__product-meta {
  padding-top: $gutter / 5;
}

.ajaxcart__footer {
  bottom: 0;
  color: white;
  padding: $base/2;
  padding-bottom: $base;
  position: absolute;
  width: 100%;

  .field {
    @include clearfix();
    display: block;
    position: relative;

    .field__key,
    .field__value {
      line-height: $base*2;
      padding: 0 $base/2;
    }
    .field__value {
      @include transform(translateY(1px));
      text-align: right;
    }
  }

  .cart__checkout {
    margin-bottom: 18px;
    padding-top: $base/4;
  }
}

.ajaxcart__note {
  line-height: $base;
  opacity: 0.5;
  padding: 0 $base/2;
}

/*================ Quantity Selectors ================*/
.js-qty {
  overflow: visible;
  position: relative;

  input {
    color: black;
    display: block;
    font-size: 14px;
    font-weight: 400;
    height: $base;
    line-height: $base;
    text-align: center;
    width: 100%;
    margin: 0;
  }
}

.js-qty__adjust {
  @include user-select(none);
  background-color: transparent;
  border: 0 none;
  cursor: pointer;
  display: block;
  height: $base*2;
  left: $base/2;
  overflow: hidden;
  position: absolute;
  text-align: center;
  top: -$base/2;
  width: $base;

  &:hover,
  &:focus {
    color: $colorPrimary;
    outline: none;
  }

  &::after {
    @include transform(rotate(45deg));
    border: solid 1px $colorPrimary;
    content:'';
    height: $base/2;
    pointer-events: none;
    position: absolute;
    width: $base/2;
  }
}

.js-qty__adjust--plus {
  left: $base;

  &::after {
    border-bottom: 0;
    border-left: 0;
    left: 7px;
    top: 18px;
  }
}

.js-qty__adjust--minus {
  left: 0;

  &::after {
    border-right: 0;
    border-top: 0;
    left: 5px;
    top: 18px;
  }
}

/*================ Quantity Selectors in Ajax Cart ================*/
.ajaxcart__qty {
  @extend .js-qty;
  margin: 0;

  .is-loading & {
    opacity: 0.5;
    transition: none;
  }
}

.ajaxcart__qty-num {
  color: black;
}

.ajaxcart__qty-adjust {
  @extend .js-qty__adjust;
  color: $colorDrawerText;
}

.ajaxcart__qty--plus {
  @extend .js-qty__adjust--plus;
  border-color: $colorDrawerBorder;
}

.ajaxcart__qty--minus {
  @extend .js-qty__adjust--minus;
  border-color: $colorDrawerBorder;
}

.ajaxcart-item__price-strikethrough {
  float: right;
}

{% endif %} // settings.ajax_cart_method

/*============================================================================
  #Template Specifics
==============================================================================*/
.template-page {
  
  .page {
    background-color: #EEE;
    transition: $drawerTransition;
    opacity: 1;

    .page__image {
      background-color: red;
      display: none;
      //height: 480px;
      height: $base*2;
      margin: 0;
      width: 100%;
    }

    .page__content {
      margin: 0;
      margin-bottom: $base;
      min-height: 600px;
      padding-bottom: $base*1.5;
      padding-left: $base/2;
      padding-right: 50%;
      padding-top: $base*2;
      position: relative;

      @include at-query ($max, $medium) {
        padding: $base/2;
        width: 100%;
      }

      p {
        line-height: $base;
        margin-bottom: $base/2;

        > .h4 {
          display: inline;
          width: $base*10;
        }

        > a {
          border-bottom: solid 1px #DDD;
          text-decoration: none;
        }

        &:last-child {
          margin-bottom: 0;
        }
      }

      h2 {

        &:last-child {
          margin-bottom: 0;
        }
      }
      h4 {
        font-weight: 600;
        margin-bottom: $base/2;
        margin-top: 0;
        padding-top: $base;

        &:first-child {
          padding-top: 0;
        }
      }
    }
  }
}

.loading {
  @include transform(translateX(-$base) translateY(-$base));
  height: $base*2;
  left: 50%;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 50%;
  transition: $drawerTransition;
  width: $base*2;

  .loading__ring {
    @include animation('rotate--loading 2s infinite');
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    will-change: transform;

    #loading__ring--1 {
      .cls-1 {
        fill: red;
      }
    }
  }
}
@include keyframes(rotate--loading) {
  0% { @include transform(rotate(0deg)) }
  100% { @include transform(rotate(359deg)) }
}

.guides--alpha {
  &::after {
    background-color: red;
    border-top: solid $base green;
    bottom: 0;
    content: '';
    height: $base*2;
    left: 0;
    opacity: 0.5;
    position: absolute;
    right: 0;
    width: 100%;
  }
}

.preloading {
  .hero {
    opacity: 0;
  }
  .page {
    opacity: 0;
  }
  .loading {
    opacity: 1;
  }
  .footer {
    .footer__actions {
    }
  }
}
